@page "/lieuxlivraisonBbsGrid"

@using BlazorBootstrap
@using Corail.Maquettage.Components.Lieux
@using Corail.Maquettage.Models

@rendermode InteractiveServer

@inject Corail.Maquettage.Services.LieuxService lieuService

@code
{
    private LieuxDeLivraisonModel? currentLieuDetail;

    private HashSet<LieuDeLivraisonPreview> selectedLieuPreviews = new();
    private IEnumerable<LieuDeLivraisonPreview> lieux = default!;

    protected override async Task OnInitializedAsync()
    {
        lieux = await lieuService.GetLocations();
        await HandleLieuSelected(lieux.First());
    }

    private void HandleNewLocation()
    {
        currentLieuDetail = new LieuxDeLivraisonModel();
    }

    private async Task HandleLieuSaved(LieuxDeLivraisonModel lieu)
    {
        if (lieu.Id.GetValueOrDefault() < 1)
        {
            await lieuService.AddLocation(lieu);
        }
        else
        {
            await lieuService.UpdateLocation(lieu);
        }

        lieux = await lieuService.GetLocations();
        StateHasChanged();
    }

    private async Task HandleLieuDeleted(int id)
    {
        await lieuService.DeleteLocation(id);

        lieux = await lieuService.GetLocations();

        await HandleLieuSelected(lieux.First());
        StateHasChanged();
    }

    private async Task<GridDataProviderResult<LieuDeLivraisonPreview>> LieuxDataProvider(GridDataProviderRequest<LieuDeLivraisonPreview> request)
    {
        if (lieux is null) // pull ll only one time for client-side filtering, sorting, and paging
            lieux = await lieuService.GetLocations();

        return await Task.FromResult(request.ApplyTo(lieux));
    }

    private async Task HandleLieuSelected(LieuDeLivraisonPreview item)
    {
        var lieuDetail = await lieuService.GetLocationById(item.Id) ?? throw new Exception("404");

        currentLieuDetail = new LieuxDeLivraisonModel()
            {
                Id = lieuDetail.Id,
                Nom = lieuDetail.Nom,
                Numero = lieuDetail.Numero,
                Rue = lieuDetail.Rue,
                Complement = lieuDetail.Complement,
                CodePostal = lieuDetail.CodePostal,
                Ville = lieuDetail.Ville
            };
    }
}

<div class="container-fluid mt-3">
    <ThemeSwitcher />
    <div class="row mb-2">
        <div class="col-md-4 d-flex justify-content-between">
            <h1>Lieux de livraison</h1>
            <Button Type=ButtonType.Button Color=ButtonColor.Primary class="ml-auto btn-standard-size" @onclick="HandleNewLocation">
                <i class="bi bi-plus-lg"></i>
                Ajouter
            </Button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <BbsLieuxList LieuxPreviews="@lieux" LieuSelectedHandler="HandleLieuSelected" />
        </div>
        <div class="col-md-8">
            <LieuDetail Model="@currentLieuDetail" OnLieuSaved="HandleLieuSaved" OnLieuDeleted="HandleLieuDeleted" />
        </div>
    </div>
</div>
